/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.30.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type ExecuteMsg = {
    assign_node_layer: {
      layer: Layer;
      mix_id: number;
      [k: string]: unknown;
    };
  } | {
    create_family: {
      label: string;
      owner_signature: string;
      [k: string]: unknown;
    };
  } | {
    join_family: {
      family_head: string;
      signature: string;
      [k: string]: unknown;
    };
  } | {
    leave_family: {
      family_head: string;
      signature: string;
      [k: string]: unknown;
    };
  } | {
    kick_family_member: {
      member: string;
      signature: string;
      [k: string]: unknown;
    };
  } | {
    create_family_on_behalf: {
      label: string;
      owner_address: string;
      owner_signature: string;
      [k: string]: unknown;
    };
  } | {
    join_family_on_behalf: {
      family_head: string;
      member_address: string;
      signature: string;
      [k: string]: unknown;
    };
  } | {
    leave_family_on_behalf: {
      family_head: string;
      member_address: string;
      signature: string;
      [k: string]: unknown;
    };
  } | {
    kick_family_member_on_behalf: {
      head_address: string;
      member: string;
      signature: string;
      [k: string]: unknown;
    };
  } | {
    update_rewarding_validator_address: {
      address: string;
      [k: string]: unknown;
    };
  } | {
    update_contract_state_params: {
      updated_parameters: ContractStateParams;
      [k: string]: unknown;
    };
  } | {
    update_active_set_size: {
      active_set_size: number;
      force_immediately: boolean;
      [k: string]: unknown;
    };
  } | {
    update_rewarding_params: {
      force_immediately: boolean;
      updated_params: IntervalRewardingParamsUpdate;
      [k: string]: unknown;
    };
  } | {
    update_interval_config: {
      epoch_duration_secs: number;
      epochs_in_interval: number;
      force_immediately: boolean;
      [k: string]: unknown;
    };
  } | {
    advance_current_epoch: {
      expected_active_set_size: number;
      new_rewarded_set: LayerAssignment[];
      [k: string]: unknown;
    };
  } | {
    reconcile_epoch_events: {
      limit?: number | null;
      [k: string]: unknown;
    };
  } | {
    bond_mixnode: {
      cost_params: MixNodeCostParams;
      mix_node: MixNode;
      owner_signature: string;
      [k: string]: unknown;
    };
  } | {
    bond_mixnode_on_behalf: {
      cost_params: MixNodeCostParams;
      mix_node: MixNode;
      owner: string;
      owner_signature: string;
      [k: string]: unknown;
    };
  } | {
    pledge_more: {
      [k: string]: unknown;
    };
  } | {
    pledge_more_on_behalf: {
      owner: string;
      [k: string]: unknown;
    };
  } | {
    unbond_mixnode: {
      [k: string]: unknown;
    };
  } | {
    unbond_mixnode_on_behalf: {
      owner: string;
      [k: string]: unknown;
    };
  } | {
    update_mixnode_cost_params: {
      new_costs: MixNodeCostParams;
      [k: string]: unknown;
    };
  } | {
    update_mixnode_cost_params_on_behalf: {
      new_costs: MixNodeCostParams;
      owner: string;
      [k: string]: unknown;
    };
  } | {
    update_mixnode_config: {
      new_config: MixNodeConfigUpdate;
      [k: string]: unknown;
    };
  } | {
    update_mixnode_config_on_behalf: {
      new_config: MixNodeConfigUpdate;
      owner: string;
      [k: string]: unknown;
    };
  } | {
    bond_gateway: {
      gateway: Gateway;
      owner_signature: string;
      [k: string]: unknown;
    };
  } | {
    bond_gateway_on_behalf: {
      gateway: Gateway;
      owner: string;
      owner_signature: string;
      [k: string]: unknown;
    };
  } | {
    unbond_gateway: {
      [k: string]: unknown;
    };
  } | {
    unbond_gateway_on_behalf: {
      owner: string;
      [k: string]: unknown;
    };
  } | {
    delegate_to_mixnode: {
      mix_id: number;
      [k: string]: unknown;
    };
  } | {
    delegate_to_mixnode_on_behalf: {
      delegate: string;
      mix_id: number;
      [k: string]: unknown;
    };
  } | {
    undelegate_from_mixnode: {
      mix_id: number;
      [k: string]: unknown;
    };
  } | {
    undelegate_from_mixnode_on_behalf: {
      delegate: string;
      mix_id: number;
      [k: string]: unknown;
    };
  } | {
    reward_mixnode: {
      mix_id: number;
      performance: Percent;
      [k: string]: unknown;
    };
  } | {
    withdraw_operator_reward: {
      [k: string]: unknown;
    };
  } | {
    withdraw_operator_reward_on_behalf: {
      owner: string;
      [k: string]: unknown;
    };
  } | {
    withdraw_delegator_reward: {
      mix_id: number;
      [k: string]: unknown;
    };
  } | {
    withdraw_delegator_reward_on_behalf: {
      mix_id: number;
      owner: string;
      [k: string]: unknown;
    };
  };
  export type Layer = "One" | "Two" | "Three";
  export type Uint128 = string;
  export type Decimal = string;
  export type Percent = Decimal;
  export interface ContractStateParams {
    minimum_gateway_pledge: Coin;
    minimum_mixnode_delegation?: Coin | null;
    minimum_mixnode_pledge: Coin;
    [k: string]: unknown;
  }
  export interface Coin {
    amount: Uint128;
    denom: string;
    [k: string]: unknown;
  }
  export interface IntervalRewardingParamsUpdate {
    active_set_work_factor?: Decimal | null;
    interval_pool_emission?: Percent | null;
    reward_pool?: Decimal | null;
    rewarded_set_size?: number | null;
    staking_supply?: Decimal | null;
    staking_supply_scale_factor?: Percent | null;
    sybil_resistance_percent?: Percent | null;
    [k: string]: unknown;
  }
  export interface LayerAssignment {
    layer: Layer;
    mix_id: number;
    [k: string]: unknown;
  }
  export interface MixNodeCostParams {
    interval_operating_cost: Coin;
    profit_margin_percent: Percent;
    [k: string]: unknown;
  }
  export interface MixNode {
    host: string;
    http_api_port: number;
    identity_key: string;
    mix_port: number;
    sphinx_key: string;
    verloc_port: number;
    version: string;
    [k: string]: unknown;
  }
  export interface MixNodeConfigUpdate {
    host: string;
    http_api_port: number;
    mix_port: number;
    verloc_port: number;
    version: string;
    [k: string]: unknown;
  }
  export interface Gateway {
    clients_port: number;
    host: string;
    identity_key: string;
    location: string;
    mix_port: number;
    sphinx_key: string;
    version: string;
    [k: string]: unknown;
  }
  export interface InstantiateMsg {
    epoch_duration: Duration;
    epochs_in_interval: number;
    initial_rewarding_params: InitialRewardingParams;
    rewarding_denom: string;
    rewarding_validator_address: string;
    vesting_contract_address: string;
    [k: string]: unknown;
  }
  export interface Duration {
    nanos: number;
    secs: number;
    [k: string]: unknown;
  }
  export interface InitialRewardingParams {
    active_set_size: number;
    active_set_work_factor: Decimal;
    initial_reward_pool: Decimal;
    initial_staking_supply: Decimal;
    interval_pool_emission: Percent;
    rewarded_set_size: number;
    staking_supply_scale_factor: Percent;
    sybil_resistance: Percent;
    [k: string]: unknown;
  }
  export interface MigrateMsg {
    vesting_contract_address?: string | null;
    [k: string]: unknown;
  }
  export type QueryMsg = {
    get_all_families_paged: {
      limit?: number | null;
      start_after?: string | null;
      [k: string]: unknown;
    };
  } | {
    get_all_members_paged: {
      limit?: number | null;
      start_after?: string | null;
      [k: string]: unknown;
    };
  } | {
    get_family_by_head: {
      head: string;
      [k: string]: unknown;
    };
  } | {
    get_family_by_label: {
      label: string;
      [k: string]: unknown;
    };
  } | {
    get_family_members_by_head: {
      head: string;
      [k: string]: unknown;
    };
  } | {
    get_family_members_by_label: {
      label: string;
      [k: string]: unknown;
    };
  } | {
    get_contract_version: {
      [k: string]: unknown;
    };
  } | {
    get_rewarding_validator_address: {
      [k: string]: unknown;
    };
  } | {
    get_state_params: {
      [k: string]: unknown;
    };
  } | {
    get_state: {
      [k: string]: unknown;
    };
  } | {
    get_rewarding_params: {
      [k: string]: unknown;
    };
  } | {
    get_current_interval_details: {
      [k: string]: unknown;
    };
  } | {
    get_rewarded_set: {
      limit?: number | null;
      start_after?: number | null;
      [k: string]: unknown;
    };
  } | {
    get_mix_node_bonds: {
      limit?: number | null;
      start_after?: number | null;
      [k: string]: unknown;
    };
  } | {
    get_mix_nodes_detailed: {
      limit?: number | null;
      start_after?: number | null;
      [k: string]: unknown;
    };
  } | {
    get_unbonded_mix_nodes: {
      limit?: number | null;
      start_after?: number | null;
      [k: string]: unknown;
    };
  } | {
    get_unbonded_mix_nodes_by_owner: {
      limit?: number | null;
      owner: string;
      start_after?: number | null;
      [k: string]: unknown;
    };
  } | {
    get_unbonded_mix_nodes_by_identity_key: {
      identity_key: string;
      limit?: number | null;
      start_after?: number | null;
      [k: string]: unknown;
    };
  } | {
    get_owned_mixnode: {
      address: string;
      [k: string]: unknown;
    };
  } | {
    get_mixnode_details: {
      mix_id: number;
      [k: string]: unknown;
    };
  } | {
    get_mixnode_rewarding_details: {
      mix_id: number;
      [k: string]: unknown;
    };
  } | {
    get_stake_saturation: {
      mix_id: number;
      [k: string]: unknown;
    };
  } | {
    get_unbonded_mix_node_information: {
      mix_id: number;
      [k: string]: unknown;
    };
  } | {
    get_bonded_mixnode_details_by_identity: {
      mix_identity: string;
      [k: string]: unknown;
    };
  } | {
    get_layer_distribution: {
      [k: string]: unknown;
    };
  } | {
    get_gateways: {
      limit?: number | null;
      start_after?: string | null;
      [k: string]: unknown;
    };
  } | {
    get_gateway_bond: {
      identity: string;
      [k: string]: unknown;
    };
  } | {
    get_owned_gateway: {
      address: string;
      [k: string]: unknown;
    };
  } | {
    get_mixnode_delegations: {
      limit?: number | null;
      mix_id: number;
      start_after?: string | null;
      [k: string]: unknown;
    };
  } | {
    get_delegator_delegations: {
      delegator: string;
      limit?: number | null;
      start_after?: [number, string] | null;
      [k: string]: unknown;
    };
  } | {
    get_delegation_details: {
      delegator: string;
      mix_id: number;
      proxy?: string | null;
      [k: string]: unknown;
    };
  } | {
    get_all_delegations: {
      limit?: number | null;
      start_after?: [number, string] | null;
      [k: string]: unknown;
    };
  } | {
    get_pending_operator_reward: {
      address: string;
      [k: string]: unknown;
    };
  } | {
    get_pending_mix_node_operator_reward: {
      mix_id: number;
      [k: string]: unknown;
    };
  } | {
    get_pending_delegator_reward: {
      address: string;
      mix_id: number;
      proxy?: string | null;
      [k: string]: unknown;
    };
  } | {
    get_estimated_current_epoch_operator_reward: {
      estimated_performance: Percent;
      mix_id: number;
      [k: string]: unknown;
    };
  } | {
    get_estimated_current_epoch_delegator_reward: {
      address: string;
      estimated_performance: Percent;
      mix_id: number;
      proxy?: string | null;
      [k: string]: unknown;
    };
  } | {
    get_pending_epoch_events: {
      limit?: number | null;
      start_after?: number | null;
      [k: string]: unknown;
    };
  } | {
    get_pending_interval_events: {
      limit?: number | null;
      start_after?: number | null;
      [k: string]: unknown;
    };
  };